name: 'Create release'

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [main]

jobs:
  print_token:
    runs-on: ubuntu-latest
    steps:
      - name: Print GitHub Token
        run: echo ${{ secrets.YOUR_GITHUB_TOKEN }}
        env:
          YOUR_GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
  # Устанавливает should_skip в true, если одновременно запускается два релиза
#  checkConcurrentRelease:
#    runs-on: ubuntu-latest
#    outputs:
#      should_skip: ${{ steps.skip_check.outputs.should_skip }}
#    steps:
#      - id: skip_check
#        uses: fkirc/skip-duplicate-actions@v5
#        with:
#          concurrent_skipping: 'always'
#          skip_after_successful_duplicate: 'true'

  releasePackages:
#    needs: checkConcurrentRelease
#    if: needs.pre_job.outputs.should_skip != 'true'
    name: Release packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm i

      - name: Generate release
        id: semantic_release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
